{"ast":null,"code":"var _jsxFileName = \"/Users/jamesgable/Documents/dadjokefrontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [joke, setJoke] = useState('');\n  const [showEmoji, setShowEmoji] = useState(false);\n  const fetchJoke = async () => {\n    try {\n      setShowEmoji(true); // Show the emoji when fetching a new joke\n      const response = await fetch('http://localhost:8080/get-joke');\n      if (!response.ok) {\n        throw new Error('Failed to fetch joke');\n      }\n      const data = await response.json();\n      setJoke(data.joke);\n    } catch (error) {\n      console.error('Error fetching joke:', error);\n    } finally {\n      // Hide the emoji after some time (e.g., 2 seconds)\n      setTimeout(() => setShowEmoji(false), 2000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dad Joke Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showEmoji && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"emoji\",\n        src: \"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUA AAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO 9TXL0Y4OHwAAAABJRU5ErkJggg==\",\n        alt: \"laughing dad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchJoke,\n      children: \"Get a Joke\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), joke && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: joke\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DCMrHTokBmBle74H2vD+KLYRs9w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","joke","setJoke","showEmoji","setShowEmoji","fetchJoke","response","fetch","ok","Error","data","json","error","console","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/jamesgable/Documents/dadjokefrontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [joke, setJoke] = useState('');\n  const [showEmoji, setShowEmoji] = useState(false);\n\n  const fetchJoke = async () => {\n    try {\n      setShowEmoji(true); // Show the emoji when fetching a new joke\n      const response = await fetch('http://localhost:8080/get-joke');\n      if (!response.ok) {\n        throw new Error('Failed to fetch joke');\n      }\n      const data = await response.json();\n      setJoke(data.joke);\n    } catch (error) {\n      console.error('Error fetching joke:', error);\n    } finally {\n      // Hide the emoji after some time (e.g., 2 seconds)\n      setTimeout(() => setShowEmoji(false), 2000);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dad Joke Generator</h1>\n      <div>{showEmoji && <img className=\"emoji\" src=\"data:image/png;base64, iVBORw0KGgoAAAANSUhEUgAAAAUA\n    AAAFCAYAAACNbyblAAAAHElEQVQI12P4//8/w38GIAXDIBKE0DHxgljNBAAO\n        9TXL0Y4OHwAAAABJRU5ErkJggg==\" alt=\"laughing dad\" />}</div>\n      <button onClick={fetchJoke}>Get a Joke</button>\n      {joke && <p>{joke}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACFD,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;MACpB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCT,OAAO,CAACQ,IAAI,CAACT,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACR;MACAE,UAAU,CAAC,MAAMV,YAAY,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;IAC7C;EACF,CAAC;EAED,oBACEN,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlB,OAAA;MAAAkB,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BtB,OAAA;MAAAkB,QAAA,EAAMb,SAAS,iBAAIL,OAAA;QAAKiB,SAAS,EAAC,OAAO;QAACM,GAAG,EAAC,+IAEf;QAACC,GAAG,EAAC;MAAc;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC5DtB,OAAA;MAAQyB,OAAO,EAAElB,SAAU;MAAAW,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9CnB,IAAI,iBAAIH,OAAA;MAAAkB,QAAA,EAAIf;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACpB,EAAA,CA/BQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}